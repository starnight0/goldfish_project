# cat ../PRJEB12518_sun_genetic_map_tophat_samtools/onemap/q5_A_m2/10K.*.by_ctg/broken_pos.txt | cut -f 2- | sort -k1,1 | uniq > broken_pos.txt
# cut -f 1,3,4 broken_pos.txt > broken_pos.bed

~/my_program3/src/assembler/XG_detect_break.main -bg ~/data/goldfish/11549472/sergey_canu70x/arrow/carAur01/big/carAur01.noM.contigs.readToTig.trim_end_1000bp.bg -g ~/data/goldfish/11549472/sergey_canu70x/arrow/carAur01/carAur01.noM.sm.fa -o low_depth_pos.txt -d 5

cat $canu70x_dir/PRJEB12518_sun_genetic_map_hisat2/onemap/rmdup.q5_m2.10K/*.by_ctg/broken_pos.txt | cut -f 2- | sort -k1,1 | uniq > broken_pos1.txt

cat $canu70x_dir/PRJEB12518_sun_genetic_map_hisat2/onemap/rmdup.q5_m2.10K/out.*.LOD_5.5/broken_pos.txt | cut -f 2- | sort -k1,1 | uniq | awk '$8<10' > broken_pos2.txt

cat broken_pos1.txt broken_pos2.txt | sort | uniq > broken_pos.txt
# tig00000560_arrow
# tig00002083_arrow
# tig00003243_arrow

cut -f 1,3,4 broken_pos.txt > broken_pos.bed

# cut -f 1 broken.fasta.fai | sort -k1,1 > broken.ctg_name
# join -v 1 broken.ctg_name contained.ctg_name > broken.not_contained.ctg_name
~/my_program3/src/utility/czl_fasta_break.pl -i ../goldfish.arrow.renamed.not_contained.fasta -o broken.fasta -b broken_pos.bed
samtools faidx broken.fasta
~/my_program3/src/assembler/NL50.pl broken.fasta.fai > broken.NL50
hgFakeAgp broken.fasta broken.fasta.agp


# for name in 50K.Sire 50K.Dam
# do
# for lod in 5.5 6
# do
#   tail -n +2 ../PRJEB12518_sun_genetic_map_tophat_samtools/onemap/q5_A_m2/out1.$name.LOD_$lod/all.order | awk -F_ '$1!~/^mark/ {print $2"_"$3"\t"$4}' | awk -F$'\t' '{print $1"\t"$2"\t"$15"\t"$3}' | sort -k1,1 -k2,2n -k3,3 -k4,4n > out1.$name.LOD_$lod.map
#   ~/my_program3/src/utility/czl_vcf_liftover.pl -i out1.$name.LOD_$lod.map -o out1.$name.LOD_$lod.broken.map -c broken.fasta.chain
#   ~/my_program3/src/assembler/scaff_with_gm.main --map out1.$name.LOD_$lod.broken.map -g broken.fasta -o broken.gm_scf.$name.LOD_$lod. > broken.gm_scf.$name.LOD_$lod.log
#   ~/my_program3/src/utility/czl_onemap2_to_Chromonomer_in.pl -io out1.$name.LOD_$lod.broken.map -o out1.$name.LOD_$lod.broken.map.chromonomer_in.
#   if ! [ -d out1.$name.LOD_$lod.broken.map.chromonomer_out ]
#   then
#     mkdir out1.$name.LOD_$lod.broken.map.chromonomer_out
#   fi
#   ~/program/chromonomer-1.06/chromonomer -p out1.$name.LOD_$lod.broken.map.chromonomer_in.lg -s out1.$name.LOD_$lod.broken.map.chromonomer_in.sam -a broken.fasta.agp -o out1.$name.LOD_$lod.broken.map.chromonomer_out
# done
# done

len=50K
for bcf in rmdup.q5_m2
do
for name in out out.Sire out.Dam
do
for lod in 5 5.5
do
  idir=$canu70x_dir/PRJEB12518_sun_genetic_map_hisat2/onemap/$bcf.$len/$name.LOD_$lod
  dir=$bcf.$len/$name.LOD_$lod
  if ! [ -d $dir ]; then mkdir -p $dir; fi
  ~/my_program3/src/utility/czl_vcf_liftover.pl -i $idir/all.f.map4 -o $dir/all.br.map4 -c broken.fasta.chain
  ~/my_program3/src/utility/czl_onemap2_to_Chromonomer_in.pl -io $dir/all.br.map4 -o $dir/chromonomer_in.
  if ! [ -d $dir/chromonomer_out ]
  then
    mkdir $dir/chromonomer_out
  fi
  if ! [ -d $dir/chromonomer_nosplit_out ]
  then
    mkdir $dir/chromonomer_nosplit_out
  fi
# if ! [ -d $dir/chromonomer_nosplit_3_out ]
# then
#   mkdir $dir/chromonomer_nosplit_3_out
# fi
  ~/program/chromonomer-1.06/chromonomer -p $dir/chromonomer_in.lg -s $dir/chromonomer_in.sam -a broken.fasta.agp -o $dir/chromonomer_out > $dir/chromonomer.stdout 2>$dir/chromonomer.stderr
  ~/program/chromonomer-1.06/chromonomer -p $dir/chromonomer_in.lg -s $dir/chromonomer_in.sam -a broken.fasta.agp -o $dir/chromonomer_nosplit_out --disable_splitting > $dir/chromonomer_nosplit.stdout 2>$dir/chromonomer_nosplit.stderr
# ~/program/chromonomer-1.06/chromonomer -p $dir/chromonomer_in.lg -s $dir/chromonomer_in.sam -a broken.fasta.agp -o $dir/chromonomer_nosplit_3_out --disable_splitting --min_markers 3 > $dir/chromonomer_nosplit_3.stdout 2>$dir/chromonomer_nosplit_3.stderr
  > $dir/chromonomer_nosplit.multiseg.ctg.txt
  for ctg in `ls $dir/chromonomer_nosplit_out/tig*.log | sed -e 's/^.*\///' -e 's/\.log$//'`
  do
    a=`cat $dir/chromonomer_nosplit_out/$ctg.log | grep Segment | wc -l | head -n 1|cut -f 1`
    if  [ $a -ne 0 ]
    then
      echo $ctg$'\t'$a >> $dir/chromonomer_nosplit.multiseg.ctg.txt
    fi
  done
done
done
done


cat rmdup.q5_m2.50K/out.LOD_5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a1
cat rmdup.q5_m2.50K/out.Sire.LOD_5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a2
cat rmdup.q5_m2.50K/out.Dam.LOD_5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a3
cat rmdup.q5_m2.50K/out.LOD_5.5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a4
join -t$'\t' -j 1 a1 a2 > b1
join -t$'\t' -j 1 -v 1 a1 a2 | awk '{print $0"\t"0}' >> b1
join -t$'\t' -j 1 -v 1 a2 a1 | awk '{print $1"\t0\t"$2}' >> b1
sort -k1,1 b1 > b; mv b b1
join -t$'\t' -j 1 b1 a3 > b2;
join -t$'\t' -j 1 -v 1 b1 a3 | awk '{print $0"\t"0}' >> b2
join -t$'\t' -j 1 -v 1 a3 b1 | awk '{print $1"\t0\t0\t"$2}' >> b2
sort -k1,1 b2 > b1 
join -t$'\t' -j 1 b1 a4 > b2;
join -t$'\t' -j 1 -v 1 b1 a4 | awk '{print $0"\t"0}' >> b2
join -t$'\t' -j 1 -v 1 a4 b1 | awk '{print $1"\t0\t0\t"$2}' >> b2
sort -k1,1 b2 > b1 
rm a1 a2 a3 a4
echo "rmdup.q5_m2.50K.LOD_5\trmdup.q5_m2.50K.Sire.LOD_5\trmdup.q5_m2.50K.Dam.LOD_5\trmdup.q5_m2.50K.LOD_5.5" > lg_match_between_group
cat b1 >> lg_match_between_group
cat lg_match_between_group | cut -f 2- | sort -k1,1n -k2,2n -k3,3n -k4,4n | uniq  -c | awk -v OFS=$'\t' '{print $2,$3,$4,$5,$1}' | sort -k1,1n -k5,5nr -k2,2n -k3,3n -k4,4n

cat rmdup.q5_m2.50K/out.LOD_5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a1
cat rmdup.q5_m2.50K/out.LOD_5.5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a2
cat rmdup.q5_m2.10K/out.LOD_5.5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a3
join -t$'\t' -j 1 a1 a2 > b1
join -t$'\t' -j 1 -v 1 a1 a2 | awk '{print $0"\t"0}' >> b1
join -t$'\t' -j 1 -v 1 a2 a1 | awk '{print $1"\t0\t"$2}' >> b1
sort -k1,1 b1 > b; mv b b1
join -t$'\t' -j 1 b1 a3 > b2;
join -t$'\t' -j 1 -v 1 b1 a3 | awk '{print $0"\t"0}' >> b2
join -t$'\t' -j 1 -v 1 a3 b1 | awk '{print $1"\t0\t0\t"$2}' >> b2
sort -k1,1 b2 > b1 
rm a1 a2 a3
echo "rmdup.q5_m2.50K.LOD_5\trmdup.q5_m2.50K.LOD_5.5\trmdup.q5_m2.10K.LOD_5.5" > lg_match_between_group.50Kvs10K.txt
cat b1 >> lg_match_between_group.50Kvs10K.txt
cat lg_match_between_group.50Kvs10K.txt | cut -f 2- | sort -k1,1n -k2,2n -k3,3n | uniq  -c | awk -v OFS=$'\t' '{print $2,$3,$4,$1}' | sort -k1,1n -k4,4nr -k2,2n -k3,3n


cat rmdup.q5_m2.10K/out.LOD_5.5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a1
cat rmdup.q5_m2.10K/out.Sire.LOD_5.5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a2
cat rmdup.q5_m2.10K/out.Dam.LOD_5.5/chromonomer_nosplit_out/CHRR_linkage_map.tsv | awk '{print $4"\t"$1}' | sort -k1,1 -k2,2n | uniq > a3
join -t$'\t' -j 1 a1 a2 > b1
join -t$'\t' -j 1 -v 1 a1 a2 | awk '{print $0"\t0"}' >> b1
join -t$'\t' -j 1 -v 1 a2 a1 | awk '{print $1"\t0\t"$2}' >> b1
sort -k1,1 b1 > b; mv b b1
join -t$'\t' -j 1 b1 a3 > b2;
join -t$'\t' -j 1 -v 1 b1 a3 | awk '{print $0"\t"0}' >> b2
join -t$'\t' -j 1 -v 1 a3 b1 | awk '{print $1"\t0\t0\t"$2}' >> b2
sort -k1,1 b2 > b1 
rm a1 a2 a3
echo "rmdup.q5_m2.10K.LOD_5.5\trmdup.q5_m2.10K.Sire.LOD_5.5\trmdup.q5_m2.10K.Dam.LOD_5.5" > lg_match_between_group.10K.txt
cat b1 >> lg_match_between_group.10K.txt
cat lg_match_between_group.10K.txt | cut -f 2- | sort -k1,1n -k2,2n -k3,3n | uniq  -c | awk -v OFS=$'\t' '{print $2,$3,$4,$1}' | sort -k1,1n -k4,4nr -k2,2n -k3,3n


cat rmdup.q5_m2.10K/out.*LOD_5.5/all.br.map4 rmdup.q5_m2.50K/out.*LOD_5.5/all.br.map4 rmdup.q5_m2.50K/out.*LOD_5/all.br.map4 | cut -f 1,2 | awk '{print $1"__"$2"\t"$0}' | sort -k1,1 | uniq > b1
head=chrom__pos$'\t'chrom$'\t'pos
for f in `ls rmdup.q5_m2.10K/out.*LOD_5.5/all.br.map4 rmdup.q5_m2.50K/out.*LOD_5.5/all.br.map4 rmdup.q5_m2.50K/out.*LOD_5/all.br.map4 LepMap3/rmdup.q5_m2.10K/out.LOD_8.3/all.br.map4 LepMap3/rmdup.q5_m2.10K/out.LOD_8.4/all.br.map4`
do
  h=`echo $f | sed -e 's/\/out//' -e 's/\/all.br.map4//'`
  head=$head$'\t'$h.LG$'\t'$h.CM$'\t'$h.orient$'\t'$h.LG_pos$'\t'$h.LG_index
  cat $f | awk '{print $1"__"$2"\t"$3"\t"$4}' | sort -k1,1 > a1
  f1=`echo $f | sed 's/all.br.map4/chromonomer_nosplit_out\/CHRR_linkage_map.tsv/'`
  tail -n +2 $f1 | cut -f 4-8 | awk '{print $1"__"$3"\t"$2"\t"$4"\t"$5}' | sort -k1,1 > a2
  join -t$'\t' -j 1 a1 a2 > a3
  join -t$'\t' -j 1 -v 1 a1 a2 | awk '{print $0"\t.\t.\t."}' >> a3
  cat a3 | sort -k1,1 > a1
  join -t$'\t' -j 1 b1 a1 > b2
  join -t$'\t' -j 1 -v 1 b1 a1 | awk '{print $0"\t.\t.\t.\t.\t."}' >> b2
  sort -k1,1 b2 > b1
done
echo "$head" > multi_map.txt
cat b1 >> multi_map.txt

# after merge
bcf=rmdup.q5_m2
len=10K
name=out
lod=5.5
idir=$canu70x_dir/PRJEB12518_sun_genetic_map_hisat2/onemap/$bcf.$len/$name.LOD_$lod
dir=$bcf.$len/$name.LOD_$lod
if ! [ -d $dir ]; then mkdir -p $dir; fi
~/my_program3/src/utility/czl_vcf_liftover.pl -i $idir/all.after_merge.f.map4 -o $dir/all.after_merge.br.map4 -c broken.fasta.chain
~/my_program3/src/utility/czl_onemap2_to_Chromonomer_in.pl -io $dir/all.after_merge.br.map4 -o $dir/after_merge.chromonomer_in.
cin=$dir/after_merge.chromonomer_in
cout=$dir/after_merge.chromonomer_out
if ! [ -d $cout ]
then
mkdir $cout
fi
~/program/chromonomer-1.06/chromonomer -p $cin.lg -s $cin.sam -a broken.fasta.agp -o $cout --fasta broken.fasta > $cout.stdout 2>$cout.stderr
cout=$dir/after_merge.chromonomer_nosplit_out
tail -n +4 $cout/CHRR_genome.agp | agpToLift -revStrand > $cout/CHRR_genome.agp.liftUp
if ! [ -d $cout ]
then
mkdir $cout
fi
~/program/chromonomer-1.06/chromonomer -p $cin.lg -s $cin.sam -a broken.fasta.agp -o $cout --fasta broken.fasta --disable_splitting  > $cout.stdout 2>$cout.stderr
tail -n +4 $cout/CHRR_genome.agp | agpToLift -revStrand > $cout/CHRR_genome.agp.liftUp

mkdir carAur02;
cat $cout/CHRR_genome.agp | perl -ne 'if (m/^#/) {print $_; next;} my @tab=split /\t/,$_; if ($tab[4] == "W") { if ($tab[5]=~m/^(tig.*arrow)_([0-9]+)_([0-9]+)$/) { $tab[5]=$1; $tab[6]+=$2-1; $tab[7]+=$2-1; print "LG", join "\t",@tab; } else {print "LG", $_;} } else {print "LG", $_;}' > carAur02/carAur02.LG.agp
sort -k1,1 carAur02/carAur02.LG.agp > tmp.a1
sort -k1,1 carAur02/carAur02.fa.fai > tmp.a2
join -t $'\t' -j 1 tmp.a1 tmp.a2 | cut -f 1-10 | awk '{print $6"\t"$0}' | sort -k1,1 > tmp.a
rm tmp.a1 tmp.a2
sort -k1,1 ../goldfish.arrow.renamed.fasta.fai > tmp.a3
join -t $'\t' -j 1 tmp.a tmp.a3 | cut -f 2-12 | sort -k1,1 -k4,4n > carAur02/carAur02.LG.agp.add_size
rm tmp.a3 tmp.a

cat carAur02/carAur02.LG.agp | awk '$5!="U" && $0 !~ /^#/' | cut -f 6 | sort | uniq > carAur02/carAur02.placed_contig
cat ../goldfish.arrow.renamed.fasta.fai | cut -f 1,2 | sort > tmp.a
join -t $'\t' -v 1 tmp.a carAur02/carAur02.placed_contig > carAur02/carAur02.unplaced_contig.chromSizes
cut -f 1 carAur02/carAur02.unplaced_contig.chromSizes > carAur02/carAur02.unplaced_contig
cat ../goldfish.arrow.renamed.not_contained.fasta.fai | cut -f 1,2 | sort > tmp.a
join -t $'\t' -v 1 tmp.a carAur02/carAur02.placed_contig > carAur02/carAur02.not_contained.unplaced_contig.chromSizes
cp carAur02/carAur02.LG.agp  carAur02/carAur02.agp 
cat carAur02/carAur02.not_contained.unplaced_contig.chromSizes | awk -v OFS=$'\t' '{print $1,"1",$2,"1","W",$1,"1",$2,"+"}' >> carAur02/carAur02.agp 

cp carAur02/carAur02.LG.agp.add_size  carAur02/carAur02.agp.add_size 
cat carAur02/carAur02.not_contained.unplaced_contig.chromSizes | awk -v OFS=$'\t' '{print $1,"1",$2,"1","W",$1,"1",$2,"+",$2,$2}' >> carAur02/carAur02.agp.add_size 

cat carAur02/carAur02.LG.agp.add_size | perl -e 'my $id=0; while(<STDIN>) { if (m/^#/) { next; } 
	chomp;
	my @tab=split "\t";
	my ($qchr, $qbegin, $qend, $idx, $type, $tchr, $tbegin, $tend, $strand, $qsize, $tsize) = @tab[0..10];
	if ($type eq "U") { next; }
	$id++;
	$score = ($tend-$tbegin)*100;
	$tbegin--;
	$qbegin--;
	print "chain $score $tchr $tsize + $tbegin $tend $qchr $qsize";
	if ($strand eq "+") {
		print " + $qbegin $qend"
	} else {
		print " - ", $qsize-$qend, " ", $qsize-$qbegin;
	}
	print " $id\n";
	my $l = $tend-$tbegin;
	print "$l\n\n";
	}
	' > carAur02/carAur01_to_carAur02.LG.liftOver.chain

cat carAur02/carAur02.agp.add_size | perl -e 'my $id=0; while(<STDIN>) { if (m/^#/) { next; } 
	chomp;
	my @tab=split "\t";
	my ($qchr, $qbegin, $qend, $idx, $type, $tchr, $tbegin, $tend, $strand, $qsize, $tsize) = @tab[0..10];
	if ($type eq "U") { next; }
	$id++;
	$score = ($tend-$tbegin)*100;
	$tbegin--;
	$qbegin--;
	print "chain $score $tchr $tsize + $tbegin $tend $qchr $qsize";
	if ($strand eq "+") {
		print " + $qbegin $qend"
	} else {
		print " - ", $qsize-$qend, " ", $qsize-$qbegin;
	}
	print " $id\n";
	my $l = $tend-$tbegin;
	print "$l\n\n";
	}
	' > carAur02/carAur01_to_carAur02.liftOver.chain


tail -n +4 carAur02/carAur02.LG.agp | agpToLift -revStrand > carAur02/carAur02.liftUp
cat /home/chenz11/data/goldfish/11549472/sergey_canu70x/arrow/broken_contig2/rmdup.q5_m2.10K/out.LOD_5.5/after_merge.chromonomer_nosplit_out/CHRR_integrated.fa | sed '/^>[0-9]/ s/^>/>LG/' > carAur02/carAur02.fa
samtools faidx carAur02/carAur02.fa
samtools dict -o carAur02/carAur02.dict carAur02/carAur02.fa 

#**********************************
# add 2018-03-18
#**********************************
# add 
#tig00006292_arrow	2777811	2033604	2034142	37	29	45	2
#tig00214183_arrow	7079891	4046806	4049272	38	30	46	2
#tig00214714_arrow	4465849	2670353	2670848	37	28	46	3
# del
#tig00214183_arrow	7079891	3107983	3107992	43.5	36	51.5	20
# from  broken_pos.txt
cat broken_pos.delete_some.txt manual_broken_pos1.txt > broken_pos4.txt
cut -f 1,3,4 broken_pos4.txt > broken_pos4.bed
~/my_program3/src/utility/czl_fasta_break.pl -i ../goldfish.arrow.renamed.not_contained.fasta -o broken4.fasta -b broken_pos4.bed
samtools faidx broken4.fasta
~/my_program3/src/assembler/NL50.pl broken4.fasta.fai > broken4.NL50
hgFakeAgp broken4.fasta broken4.fasta.agp


