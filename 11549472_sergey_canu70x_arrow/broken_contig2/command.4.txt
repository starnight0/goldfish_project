#**********************************
# add 2018-03-18
#**********************************
# add 
#tig00006292_arrow	2777811	2033604	2034142	37	29	45	2
#tig00214183_arrow	7079891	4046806	4049272	38	30	46	2
#tig00214714_arrow	4465849	2670353	2670848	37	28	46	3
# del
#tig00214183_arrow	7079891	3107983	3107992	43.5	36	51.5	20
# from  broken_pos.txt
cat broken_pos.delete_some.txt manual_broken_pos1.txt > broken_pos4.txt
cut -f 1,3,4 broken_pos4.txt > broken_pos4.bed
~/my_program3/src/utility/czl_fasta_break.pl -i ../goldfish.arrow.renamed.not_contained.fasta -o broken4.fasta -b broken_pos4.bed
samtools faidx broken4.fasta
~/my_program3/src/assembler/NL50.pl broken4.fasta.fai > broken4.NL50
hgFakeAgp broken4.fasta broken4.fasta.agp

~/data_cmd/goldfish/11549472/sergey_canu70x/arrow/broken_contig2/break_and_chrom.sh broken4 rmdup.q5_m2.10K/out.LOD_5.5/orig/all.newid.f.map4 carAur03 carAur03 carAur03

# edit carAur03/carAur01_to_carAur03.liftOver.chain:
# replace tig00037772_arrow with chrM:
# chain 1657900 chrM 16579 + 0 16579 chrM 16579 + 0 16579 5441
# 16579
# For the fasta file
# replace tig00037772_arrow with chrM.
cp carAur03/carAur03.agp carAur03/carAur03.withM.agp
# edit carAur03/carAur03.withM.agp to replace tig00037772 with chrM



exit 0

#***************************************
# delete 2018-03-26
#***************************************
## after merge
#bcf=rmdup.q5_m2
#len=10K
#name=out
#lod=5.5
#idir=$canu70x_dir/PRJEB12518_sun_genetic_map_hisat2/onemap/$bcf.$len/$name.LOD_$lod
#dir=$bcf.$len/$name.LOD_$lod
#if ! [ -d $dir ]; then mkdir -p $dir; fi
#~/my_program3/src/utility/czl_vcf_liftover.pl -i $idir/all.after_merge.f.map4 -o $dir/all.after_merge.br4.map4 -c broken4.fasta.chain
#~/my_program3/src/utility/czl_onemap2_to_Chromonomer_in.pl -io $dir/all.after_merge.br4.map4 -o $dir/after_merge.chromonomer_in4.
#cin=$dir/after_merge.chromonomer_in4
##cout=$dir/after_merge.chromonomer_out4
##if ! [ -d $cout ]; then mkdir $cout; fi
##~/program/chromonomer-1.06/chromonomer -p $cin.lg -s $cin.sam -a broken.fasta.agp -o $cout --fasta broken4.fasta > $cout.stdout 2>$cout.stderr
#cout=$dir/after_merge.chromonomer_nosplit_out4
##tail -n +4 $cout/CHRR_genome.agp | agpToLift -revStrand > $cout/CHRR_genome.agp.liftUp
#if ! [ -d $cout ]; then mkdir $cout; fi
#~/program/chromonomer-1.06/chromonomer -p $cin.lg -s $cin.sam -a broken4.fasta.agp -o $cout --fasta broken4.fasta --disable_splitting  > $cout.stdout 2>$cout.stderr
##tail -n +4 $cout/CHRR_genome.agp | agpToLift -revStrand > $cout/CHRR_genome.agp.liftUp
#
#mkdir carAur02_4;
#cat $cout/CHRR_integrated.fa | sed '/^>[0-9]/ s/^>/>LG/' > carAur02_4/carAur02_4.fa
#samtools faidx carAur02_4/carAur02_4.fa
#samtools dict -o carAur02_4/carAur02_4.dict carAur02_4/carAur02_4.fa 
#
#cat $cout/CHRR_genome.agp | perl -ne 'if (m/^#/) {print $_; next;} my @tab=split /\t/,$_; if ($tab[4] == "W") { if ($tab[5]=~m/^(tig.*arrow)_([0-9]+)_([0-9]+)$/) { $tab[5]=$1; $tab[6]+=$2-1; $tab[7]+=$2-1; print "LG", join "\t",@tab; } else {print "LG", $_;} } else {print "LG", $_;}' > carAur02_4/carAur02_4.LG.agp
##tail -n +4 carAur02_4/carAur02_4.LG.agp | agpToLift -revStrand > carAur02_4/carAur02_4.liftUp
#
#sort -k1,1 carAur02_4/carAur02_4.LG.agp > tmp.a1
#sort -k1,1 carAur02_4/carAur02_4.fa.fai > tmp.a2
#join -t $'\t' -j 1 tmp.a1 tmp.a2 | cut -f 1-10 | awk '{print $6"\t"$0}' | sort -k1,1 > tmp.a
#rm tmp.a1 tmp.a2
#sort -k1,1 ../goldfish.arrow.renamed.fasta.fai > tmp.a3
#join -t $'\t' -j 1 tmp.a tmp.a3 | cut -f 2-12 | sort -k1,1 -k4,4n > carAur02_4/carAur02_4.LG.agp.add_size
#rm tmp.a3 tmp.a
#
#cat carAur02_4/carAur02_4.LG.agp | awk '$5!="U" && $0 !~ /^#/' | cut -f 6 | sort | uniq > carAur02_4/carAur02_4.placed_contig
#cat ../goldfish.arrow.renamed.fasta.fai | cut -f 1,2 | sort > tmp.a
#join -t $'\t' -v 1 tmp.a carAur02_4/carAur02_4.placed_contig > carAur02_4/carAur02_4.unplaced_contig.chromSizes
#cut -f 1 carAur02_4/carAur02_4.unplaced_contig.chromSizes > carAur02_4/carAur02_4.unplaced_contig
#cat ../goldfish.arrow.renamed.not_contained.fasta.fai | cut -f 1,2 | sort > tmp.a
#join -t $'\t' -v 1 tmp.a carAur02_4/carAur02_4.placed_contig > carAur02_4/carAur02_4.not_contained.unplaced_contig.chromSizes
#cp carAur02_4/carAur02_4.LG.agp  carAur02_4/carAur02_4.agp 
#cat carAur02_4/carAur02_4.not_contained.unplaced_contig.chromSizes | awk -v OFS=$'\t' '{print $1,"1",$2,"1","W",$1,"1",$2,"+"}' >> carAur02_4/carAur02_4.agp 
#
#cp carAur02_4/carAur02_4.LG.agp.add_size  carAur02_4/carAur02_4.agp.add_size 
#cat carAur02_4/carAur02_4.not_contained.unplaced_contig.chromSizes | awk -v OFS=$'\t' '{print $1,"1",$2,"1","W",$1,"1",$2,"+",$2,$2}' >> carAur02_4/carAur02_4.agp.add_size 
#
#cat carAur02_4/carAur02_4.LG.agp.add_size | perl -e 'my $id=0; while(<STDIN>) { if (m/^#/) { next; } 
#	chomp;
#	my @tab=split "\t";
#	my ($qchr, $qbegin, $qend, $idx, $type, $tchr, $tbegin, $tend, $strand, $qsize, $tsize) = @tab[0..10];
#	if ($type eq "U") { next; }
#	$id++;
#	$score = ($tend-$tbegin)*100;
#	$tbegin--;
#	$qbegin--;
#	print "chain $score $tchr $tsize + $tbegin $tend $qchr $qsize";
#	if ($strand eq "+") {
#		print " + $qbegin $qend"
#	} else {
#		print " - ", $qsize-$qend, " ", $qsize-$qbegin;
#	}
#	print " $id\n";
#	my $l = $tend-$tbegin;
#	print "$l\n\n";
#	}
#	' > carAur02_4/carAur01_to_carAur02_4.LG.liftOver.chain
#
#cat carAur02_4/carAur02_4.agp.add_size | perl -e 'my $id=0; while(<STDIN>) { if (m/^#/) { next; } 
#	chomp;
#	my @tab=split "\t";
#	my ($qchr, $qbegin, $qend, $idx, $type, $tchr, $tbegin, $tend, $strand, $qsize, $tsize) = @tab[0..10];
#	if ($type eq "U") { next; }
#	$id++;
#	$score = ($tend-$tbegin)*100;
#	$tbegin--;
#	$qbegin--;
#	print "chain $score $tchr $tsize + $tbegin $tend $qchr $qsize";
#	if ($strand eq "+") {
#		print " + $qbegin $qend"
#	} else {
#		print " - ", $qsize-$qend, " ", $qsize-$qbegin;
#	}
#	print " $id\n";
#	my $l = $tend-$tbegin;
#	print "$l\n\n";
#	}
#	' > carAur02_4/carAur01_to_carAur02_4.liftOver.chain
#
#
